entity ADClient {
	name String required
	code String required unique
	description String
	active Boolean
}
entity ADOrganization {
	name String required
	code String required unique
	description String
	active Boolean
}
entity CCountry {
	name String required
	code String required pattern(/^[A-Z]{2}$/) unique
	withRegion Boolean
	active Boolean
}
entity CCurrency {
	code String required pattern(/^[A-Z]{3}$/) unique
	symbol String required
	name String required
	active Boolean
}
entity CRegion {
	name String required
	active Boolean
}
entity CCity {
	name String required
	active Boolean
}
entity CLocation {
	streetAddress String required
	postalCode String
	taxInvoiceAddress Boolean
	active Boolean
}
entity CBank {
	name String required
	value String required
	shortName String required
	description String
	switfCode String pattern(/^[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})?$/) unique
	active Boolean
}
/**
 * The Vendor entity.
 */
entity CVendor {
	name String required
	npwp Long required
	branch Boolean
	email String required
	phone String required
	fax String
	website String
	type VendorType required
	paymentCategory PaymentCategory required
	approvalStatus VendorApprovalStatus required
	active Boolean
}
entity CBusinessCategory {
	name String required unique
	description String
	active Boolean
}
entity CSupportingDocument {
	documentNo String required
	expirationDate LocalDate
	file Blob
	active Boolean
}
entity CDocumentType {
	name String required unique
	description String
	hasExpirationDate Boolean
	mandatoryBusinessCategories String
	additionalBusinessCategories String
	mandatoryForCompany Boolean
	mandatoryForProfessional Boolean
	additionalForCompany Boolean
	additionalForProfessional Boolean
	active Boolean
}
entity CDocumentTypeBusinessCategory(doctype_businesscat) {
	mandatory Boolean
	additional Boolean
}
/**
 * The PIC entity.
 */
entity CPersonInCharge {
	position String required
	phone String required
	functionary Boolean
	active Boolean
}
entity ADReference {
	name String 
	value String required unique
	description String
	referenceType ReferenceType
	active Boolean
}
entity ADReferenceList {
	name String
	value String required unique
	description String
	active Boolean
}
entity ADPermission {
	name String required unique
	description String
	module String required unique
	canWrite Boolean
	active Boolean
}
enum ReferenceType {
	LIST, TABLE
}
enum VendorType {
	COMPANY, PROFESSIONAL
}
enum PaymentCategory {
	RED, GREEN
}
enum VendorApprovalStatus {
	PENDING, REJECTED, APPROVED
}
relationship OneToOne {
	CCountry{currency required} to CCurrency
	CSupportingDocument{type required} to CDocumentType
	CPersonInCharge{user(login) required} to User
}
/**
 * Both side will reference each other.
 */
relationship OneToMany {
	CCountry to CRegion{country required}

	// For city without region.
	CCountry to CCity{country}

	// For city with region.
	CRegion to CCity{region}
	
	CVendor to CLocation{vendor}
	CVendor to CPersonInCharge{vendor}
	CVendor to CSupportingDocument{vendor}
	CBusinessCategory to CBusinessCategory{parentCategory}
	CDocumentType to CDocumentTypeBusinessCategory{documentType}
	CBusinessCategory to CDocumentTypeBusinessCategory{businessCategory}
	ADReference to ADReferenceList{reference}
}
/**
 * The left side entity won't be included in the right side entity.
 */
relationship ManyToOne {
	CLocation{city required} to CCity
}
relationship ManyToMany {
	CVendor{businessCategory} to CBusinessCategory{vendor}
}
// Allow filtering to all entities.
filter * except CDocumentTypeBusinessCategory
// Set pagination options.
paginate * with pagination except CDocumentTypeBusinessCategory
// Use Data Transfert Objects (DTO)
dto * with mapstruct except CDocumentTypeBusinessCategory
// Set service options to all except few
service * with serviceClass
