entity ADOrganization {
	uid UUID
	name String required
	code String required unique
	description String
	active Boolean
}

entity ADTable {
	uid UUID
	name String required unique
	view Boolean

	/**
	 * Indicates that this is a high volumed table. Thus, first
	 * show the search form when entering the window.
	 */
	highVolume Boolean

	/**
	 * Target API endpoint for the CRUD operations.
	 * It's initially generated by the dbSync process.
	 * updatable = true.
	 */
	targetEndpoint String

	active Boolean
}

entity ADColumn {
	uid UUID

	/**
	 * The JPA entity field name (usually in a camelCased format).
	 * It's automatically filled by the dbSync process.
	 * updatable = false.
	 */
	name String required

	/**
	 * The native database column name (usually in a kebab_cased format).
	 * It's automatically filled by the dbSync process.
	 * updatable = false.
	 */
	sqlName String required

	description String
	fieldLength Long

	/**
	 * Whether it is a primary key column or not.
	 * It's automatically filled by the dbSync process.
	 * updatable = false.
	 */
	key Boolean

	type ADColumnType

	/**
	 * Whether it is a foreign key column or not.
	 * It's automatically filled by the dbSync process.
	 * updatable = false.
	 */
	foreignKey Boolean

	/**
	 * The name of the linked primary key table if foreignKey is true.
	 * It's automatically filled by the dbSync process.
	 * updatable = false.
	 */
	importedTable String

	/**
	 * The column name of the linked primary key if foreignKey is true.
	 * It's automatically filled by the dbSync process.
	 * updatable = false.
	 */
	importedColumn String

	/**
	 * It's automatically filled by the dbSync process.
	 * updatable = false.
	 */
	mandatory Boolean

	/**
	 * This should be displayed only if mandatory = false.
	 */
	mandatoryLogic String

	displayLogic String
	readOnlyLogic String
	updatable Boolean
	alwaysUpdatable Boolean
	copyable Boolean
	defaultValue String
	formatPattern String

	/** The minimum character length of the string column. */
	minLength Integer

	/** The maximum character length of the string column. */
	maxLength Integer

	/** The minimum number value of the numeric column. */
	minValue Long

	/** The minimum number value of the numeric column. */
	maxValue Long

	identifier Boolean

	/**
	 * Determine that the field is displayed by default in the search form.
	 */
	defaultSelection Boolean

	/**
	 * Determine the field sequence in the search form.
	 */
	selectionSequence Integer

	active Boolean
}

entity ADWindow {
	uid UUID
	name String required
	description String
	titleLogic String
	type ADWindowType required
	accessLevel AdAccessLevel
	active Boolean
}

entity AdForm {
	uid UUID
	active Boolean
	name String required
	description String
	formName String required
	accessLevel AdAccessLevel
}

entity ADTab {
	uid UUID
	name String required
	description String
	iconName String

	/**
	 * Whether or not to show the tree view in the layout.
	 */
	treeView Boolean

	/**
	 * Target API endpoint for the CRUD operations.
	 * Override the same property in AdTable.
	 */
	targetEndpoint String

	/**
	 * Indicates to use the form layout by default instead of
	 * displaying the table layout first.
	 */
	singleRow Boolean

	/**
	 * Whether or not the record is deletable from the table.
	 */
	deletable Boolean

	/**
	 * Whether or not to allow insert a new record to the table.
	 */
	insertable Boolean

	/**
	 * Force read-only to the whole fields in the tab.
	 */
	writable Boolean

	displayLogic String
	readOnlyLogic String
	filterQuery String
	orderQuery String
	tabSequence Integer
	active Boolean
}

entity ADField {
	uid UUID
	name String required
	description String
	hint String
	staticText String
	staticField Boolean
	labelOnly Boolean
	showLabel Boolean
	showInGrid Boolean
	showInDetail Boolean
	gridSequence Integer
	detailSequence Integer
	displayLogic String
	readOnlyLogic String
	writable Boolean
	columnNo Integer
	columnOffset Integer
	columnSpan Integer
	rowNo Integer
	
	/**
	 * Don't use the actual column in the table.
	 * Instead, refers to a specific DTO's field.
	 */
	virtualColumnName String

	// Start of overriding AdColumn metadata.
	/**
	 * It's automatically filled by the dbSync process.
	 * updatable = false.
	 */
	mandatory Boolean

	/**
	 * This should be displayed only if mandatory = false.
	 */
	mandatoryLogic String

	updatable Boolean
	alwaysUpdatable Boolean
	copyable Boolean
	defaultValue String
	formatPattern String
	
	/** The minimum character length of the string column. */
	minLength Integer

	/** The maximum character length of the string column. */
	maxLength Integer

	/** The minimum number value of the numeric column. */
	minValue Long

	/** The minimum number value of the numeric column. */
	maxValue Long

	type ADColumnType
	// End of overriding AdColumn metadata.

	active Boolean
}

entity ADFieldGroup {
	uid UUID
	name String required
	collapsible Boolean
	collapseByDefault Boolean
	active Boolean
}

entity AdCallout {
	uid UUID
	active Boolean
	name String required maxlength(30)
	description String

	/* The allowed types are PROCESS and CLEAR */
	type String required maxlength(15)
}

entity AdCalloutTarget {
	uid UUID
	active Boolean

	/* 
	Required if Callout type is PROCESS.
	This is the returned field to be applied to the target field.
	*/
	sourceField String maxlength(30)

	/* The name of the target field in the same tab to apply the change on */
	targetName String required maxlength(30)
}

entity ADReference {
	uid UUID
	name String required
	value String required unique
	description String
	referenceType ADReferenceType
	active Boolean
}

entity ADReferenceList {
	uid UUID
	name String required
	value String required
	description String
	active Boolean
}

entity AdValidationRule {
	// Is needed for import or export data
	uid UUID

	name String required unique
	description String
	query String
	active Boolean
}

entity AdMenu {
	uid UUID
	name String required
	value String
	translationKey String
	description String
	path String required
	action AdMenuAction
	icon String
	redirect String
	sequence Integer

	// Just provide the Vue route.
	hidden Boolean

	// Always show the root menu. By default the first level is
	// hidden if there is only a child menu.
	alwaysShow Boolean
	active Boolean
}

entity AdTask {
	uid UUID
	active Boolean
	name String required

	// The value will be used as the task name in SCDF.
	value String required pattern(/^[a-zA-Z_\-]+$/) unique

	// Is it an async or synchronous process?
	async Boolean
}

entity AdTaskApplication {
	uid UUID
	active Boolean
	name String required
	value String required pattern(/^[a-zA-Z_\-]+$/)
	uri String required
	metadataUri String
	version String
	overrideExisting Boolean
	deployed Boolean
}

entity AdTaskProcess {
	uid UUID
	active Boolean
	runSequence Integer
	parallel Boolean
}

entity AdTaskScheduler {
	uid UUID
	active Boolean
	name String required unique
	value String required unique
	description String
	trigger AdSchedulerTrigger required
	cronExpression String
	periodicCount Integer
	periodicUnit String
}

entity AdTaskSchedulerGroup {
	uid UUID
	active Boolean
	name String required
	value String required unique
	description String
}

entity AdTrigger {
	uid UUID
	active Boolean
	name String required
	value String required pattern(/^[a-zA-Z]+$/)
	description String
	type AdTriggerType
}

entity AdTriggerParam {
	uid UUID
	active Boolean
	name String required
	value String required
	type ADColumnType required
	mandatory Boolean
	mandatoryLogic String
	displayLogic String
	readOnlyLogic String
	defaultValue String
	formatPattern String

	// The minimum character length of the String column.
	minLength Integer

	// The maximum character length of the String column.
	maxLength Integer

	// The minimum number value of the numeric column.
	minValue Long

	// The minimum number value of the numeric column.
	maxValue Long
}

entity AdButton {
	uid UUID
	active Boolean
	name String required
	tooltip String
	description String
	toolbar Boolean
	icon String
}

/**
 * The extended User entity.
 */
entity AdUser {
	uid UUID
	active Boolean
	code String required
	phone String required

	failedLoginCount Integer
	lastLoginDate Instant
}

entity AdUserAuthority {
	uid UUID
	active Boolean
}

/** Extends the JHipster's Authority entity */
entity ScAuthority {
  uid UUID
  active Boolean
  description String
  master Boolean
	accessAllOrgs Boolean
	useUserOrgs Boolean
}

entity ScAccess {
  uid UUID
  active Boolean
  name String maxlength(50)
  description String
	canWrite Boolean
}

entity ScAccessType {
  uid UUID
  active Boolean
  name String maxlength(10)
  description String
}

entity CDocumentType {
	uid UUID
	active Boolean
	name String required
	description String
}

enum AdAccessLevel {
	SYS, SYS_CLN, CLN, CLN_ORG, CLN_VND
}

enum ADColumnType {
	STRING, INTEGER, LONG, BIG_DECIMAL, FLOAT, DOUBLE,
	BOOLEAN, LOCAL_DATE, ZONED_DATE_TIME, DURATION,
	INSTANT, BLOB
}

enum ADWindowType {
	MAINTAIN, QUERY, TRANSACTION
}

enum ADReferenceType {
	DATATYPE, LIST, TABLE
}

enum AdMenuAction {
	FORM, WINDOW
}

enum AdSchedulerTrigger {
	CRON, PERIODIC
}

enum AdTriggerType {
	PROCESS, REPORT, WORKFLOW
}

/**
 * One to one relationship.
 */
relationship OneToOne {
	AdUser{user(login) required} to User
  ScAuthority{authority(name) required} to Authority
}

/**
 * Both side will reference each other.
 */
relationship OneToMany {
	// Application Dictionaries.
	ADTable to ADColumn{adTable required}
	ADWindow to ADTab{adWindow required}
	ADTab to ADTab{parentTab}
	ADTab to ADField{adTab required}
	ADField to AdCallout{field required}
	AdCallout to AdCalloutTarget{callout required}
	ADReference to ADReferenceList{adReference required}
	AdMenu to AdMenu{parentMenu}
	AdTask to AdTaskProcess{adTask required}
	AdTrigger to AdTriggerParam{adTrigger required}
	AdTaskSchedulerGroup to AdTaskScheduler{group}

  ScAuthority to ScAccess{authority required}
}
/**
 * The left side entity won't be included in the right side entity.
 */
relationship ManyToOne {
	// Application Dictionaries.
	ADTable{adOrganization required} to ADOrganization

	ADColumn{adOrganization required} to ADOrganization
	ADColumn{adReference} to ADReference
	ADColumn{adValidationRule} to AdValidationRule

	AdForm{adOrganization required} to ADOrganization
	ADWindow{adOrganization required} to ADOrganization
	
	ADTab{adOrganization required} to ADOrganization
	ADTab{adTable required} to ADTable
	ADTab{parentColumn} to ADColumn
	ADTab{foreignColumn} to ADColumn
	
	ADField{adOrganization required} to ADOrganization
	ADField{adReference} to ADReference
	ADField{adColumn} to ADColumn
	ADField{adValidationRule} to AdValidationRule
	ADField{adButton} to AdButton

	AdCallout{adOrganization required} to ADOrganization
	AdCallout{trigger} to AdTrigger
	AdCalloutTarget{adOrganization required} to ADOrganization

	ADReference{adOrganization required} to ADOrganization
	ADReferenceList{adOrganization required} to ADOrganization
	AdValidationRule{adOrganization required} to ADOrganization

	AdMenu{adWindow} to ADWindow
	AdMenu{adForm} to AdForm
	AdMenu{adOrganization required} to ADOrganization

	AdTask{adOrganization required} to ADOrganization
	AdTaskApplication{adOrganization required} to ADOrganization
	AdTaskProcess{adOrganization required} to ADOrganization
	AdTaskProcess{adTaskApplication required} to AdTaskApplication

	AdTaskScheduler{adOrganization required} to ADOrganization
	AdTaskScheduler{adTask} to AdTask
	AdTaskScheduler{adTrigger} to AdTrigger
	AdTaskSchedulerGroup{adOrganization required} to ADOrganization

	AdTrigger{adOrganization required} to ADOrganization
	AdTriggerParam{adOrganization required} to ADOrganization
	AdTriggerParam{adReference} to ADReference
	AdTriggerParam{adValidationRule} to AdValidationRule

	AdButton{adOrganization required} to ADOrganization
	AdButton{adTab required} to ADTab
	AdButton{adTrigger} to AdTrigger

	AdUser{adOrganization required} to ADOrganization

	AdUserAuthority{adOrganization required} to ADOrganization
	AdUserAuthority{user required} to AdUser
	AdUserAuthority{authority required} to ScAuthority

  ScAuthority{adOrganization required} to ADOrganization

  ScAccess{adOrganization required} to ADOrganization
  ScAccess{type required} to ScAccessType

	// Used for restricting access to specific window.
  ScAccess{window} to ADWindow

	// Used for restricting access to specific form.
	ScAccess{form} to AdForm

	// Used for restricting access to specific document actions.
	ScAccess{documentType} to CDocumentType

	// Used for restricting access to specific document actions.
	ScAccess{referenceList} to ADReferenceList

  ScAccessType{adOrganization required} to ADOrganization

	CDocumentType{adOrganization required} to ADOrganization
}

// Allow filtering to all entities.
filter *

// Set pagination options.
paginate * with pagination

// Use Data Transfert Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service * with serviceClass

skipClient *
